//BEGIN_HEADER
import java.net.URL;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.net.MalformedURLException;

import kbasereport.CreateParams;
import kbasereport.KBaseReportClient;
import kbasereport.Report;
import kbasereport.ReportInfo;
import kbasereport.WorkspaceObject;
import check16s.ReportResults;
//END_HEADER
//BEGIN_CLASS_HEADER
    private final URL callbackURL;
    private final Path scratch;
//END_CLASS_HEADER
//BEGIN_CONSTRUCTOR
    final String sdkURL = System.getenv("SDK_CALLBACK_URL");
    try {
        callbackURL = new URL(sdkURL);
        System.out.println("Got SDK_CALLBACK_URL " + callbackURL);
    } catch (MalformedURLException e) {
        throw new IllegalArgumentException("Invalid SDK callback url: " + sdkURL, e);
    }
    scratch = Paths.get(super.config.get("scratch"));
//END_CONSTRUCTOR
//BEGIN run_Check16S
        final KBaseReportClient kbr = new KBaseReportClient(callbackURL, authPart);
        kbr.setIsInsecureHttpConnectionAllowed(true);
        final String ws_name = params.get("workspace_name").asInstance();
        final String parameter_1 = params.get("parameter_1").asInstance();
        final ReportInfo report = kbr.create(new CreateParams()
                                        .withWorkspaceName(ws_name)
                                        .withReport(new Report()
                                                .withTextMessage(parameter_1)
                                                .withObjectsCreated(new java.util.ArrayList<WorkspaceObject>())));

        returnVal = new ReportResults()
                        .withReportName(report.getName())
                        .withReportRef(report.getRef());

//END run_Check16S
